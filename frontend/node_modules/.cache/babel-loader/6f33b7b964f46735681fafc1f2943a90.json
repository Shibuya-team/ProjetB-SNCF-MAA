{"ast":null,"code":"var _jsxFileName = \"/Users/a.c./Documents/Git/Projet-3-SNCF/API-MaaS-app/ProjetB-SNCF-MAAS/frontend/src/components/ItineraryMap/ItineraryMap.js\";\nimport React from \"react\";\nimport { GoogleMapProvider, MapBox, Marker, Polyline, OverlayView, InfoWindow // StandaloneAutocomplete\n} from \"@googlemap-react/core\";\nimport Taxi from \"../../images/icones/Mapicones/Taxi\";\nimport CoDriving from \"../../images/icones/Mapicones/CoDriving\"; // import styled from \"styled-components\";\n\nimport secrets from \"../../secrets\";\nimport { useState } from \"react\";\nconst color = {\n  grey: \"#EBE8E8\",\n  oldpink: \"#F0DBD8\",\n  salmon: \"#FFCAB8\",\n  gold: \"#F9C153\",\n  purple: \"#241F5D\",\n  velvet: \"#5353A2\",\n  plum: \"#6767AD\",\n  emerald: \"#78C4D2\",\n  turquoise: \"#7ED0DF\",\n  asura: \"#94DAD5\",\n  orange: \"#FF8B66\",\n  brick: \"#EB5933\",\n  white: \"#FFFFFF\"\n};\nconst size = {\n  small: \"30px\",\n  medium: \"50px\",\n  large: \"200px\",\n  xlarge: \"300px\"\n};\nexport const ItineraryMap = props => {\n  const globalState = props.globalState,\n        setGlobalState = props.setGlobalState;\n  return React.createElement(React.Fragment, null, React.createElement(GoogleMapProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(MapBox, {\n    apiKey: secrets.apiKey,\n    regionParam: \"FR\",\n    languageParam: \"FR\",\n    opts: {\n      center: {\n        lat: 48.9333,\n        lng: 2.3667\n      },\n      zoom: 12\n    },\n    style: {\n      height: \"70vh\",\n      width: \"100%\",\n      margin: \"0\"\n    },\n    useDrawing: true,\n    useGeometry: true,\n    usePlaces: true,\n    useVisualization: true,\n    useGoogleAPI: true,\n    onCenterChanged: () => {\n      console.log(\"The center of the map has changed.\");\n    },\n    globalState: globalState,\n    setGlobalState: setGlobalState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    id: \"marker\",\n    opts: {\n      draggable: false,\n      label: \"Départ\",\n      position: {\n        lat: 48.9333,\n        lng: 2.3667\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    id: \"marker2\",\n    opts: {\n      draggable: false,\n      label: \"Arrivée\",\n      position: {\n        lat: 48.95,\n        lng: 2.3167\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(InfoWindow, {\n    anchorId: \"marker\",\n    opts: {},\n    visible: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      alert(\"trouvez les taxis\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(CoDriving, {\n    size: size.small,\n    color: color.purple,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), \" \", React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"42\\u20AC\"))), React.createElement(Polyline, {\n    id: \"polyline\",\n    opts: {\n      path: [{\n        lat: 48.9333,\n        lng: 2.3667\n      }, {\n        lat: 48.9167,\n        lng: 2.3833\n      }, {\n        lat: 48.9,\n        lng: 2.3333\n      }, {\n        lat: 48.95,\n        lng: 2.3167\n      }],\n      strokeColor: \"orange\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(OverlayView, {\n    position: {\n      lat: 48.91,\n      lng: 2.3667\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Taxi, {\n    size: size.medium,\n    color: color.purple,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"48\\u20AC\"), \" */}\")));\n};\nexport default ItineraryMap;","map":{"version":3,"sources":["/Users/a.c./Documents/Git/Projet-3-SNCF/API-MaaS-app/ProjetB-SNCF-MAAS/frontend/src/components/ItineraryMap/ItineraryMap.js"],"names":["React","GoogleMapProvider","MapBox","Marker","Polyline","OverlayView","InfoWindow","Taxi","CoDriving","secrets","useState","color","grey","oldpink","salmon","gold","purple","velvet","plum","emerald","turquoise","asura","orange","brick","white","size","small","medium","large","xlarge","ItineraryMap","props","globalState","setGlobalState","apiKey","center","lat","lng","zoom","height","width","margin","console","log","draggable","label","position","alert","path","strokeColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  GoogleMapProvider,\n  MapBox,\n  Marker,\n  Polyline,\n  OverlayView,\n  InfoWindow\n  // StandaloneAutocomplete\n} from \"@googlemap-react/core\";\nimport Taxi from \"../../images/icones/Mapicones/Taxi\";\nimport CoDriving from \"../../images/icones/Mapicones/CoDriving\";\n// import styled from \"styled-components\";\nimport secrets from \"../../secrets\";\nimport { useState } from \"react\";\n\nconst color = {\n  grey: \"#EBE8E8\",\n  oldpink: \"#F0DBD8\",\n  salmon: \"#FFCAB8\",\n  gold: \"#F9C153\",\n  purple: \"#241F5D\",\n  velvet: \"#5353A2\",\n  plum: \"#6767AD\",\n  emerald: \"#78C4D2\",\n  turquoise: \"#7ED0DF\",\n  asura: \"#94DAD5\",\n  orange: \"#FF8B66\",\n  brick: \"#EB5933\",\n  white: \"#FFFFFF\"\n};\n\nconst size = {\n  small: \"30px\",\n  medium: \"50px\",\n  large: \"200px\",\n  xlarge: \"300px\"\n};\n\nexport const ItineraryMap = props => {\n  const { globalState, setGlobalState } = props;\n  return (\n    <>\n      <GoogleMapProvider>\n        <MapBox\n          apiKey={secrets.apiKey}\n          regionParam=\"FR\"\n          languageParam=\"FR\"\n          opts={{\n            center: { lat: 48.9333, lng: 2.3667 },\n            zoom: 12\n          }}\n          style={{\n            height: \"70vh\",\n            width: \"100%\",\n            margin: \"0\"\n          }}\n          useDrawing\n          useGeometry\n          usePlaces\n          useVisualization\n          useGoogleAPI\n          onCenterChanged={() => {\n            console.log(\"The center of the map has changed.\");\n          }}\n          globalState={globalState}\n          setGlobalState={setGlobalState}\n        />\n        <Marker\n          id=\"marker\"\n          opts={{\n            draggable: false,\n            label: \"Départ\",\n            position: { lat: 48.9333, lng: 2.3667 }\n          }}\n        />\n        <Marker\n          id=\"marker2\"\n          opts={{\n            draggable: false,\n            label: \"Arrivée\",\n            position: { lat: 48.95, lng: 2.3167 }\n          }}\n        />\n        <InfoWindow anchorId=\"marker\" opts={{}} visible>\n          <button\n            onClick={() => {\n              alert(\"trouvez les taxis\");\n            }}\n          >\n            <CoDriving size={size.small} color={color.purple} /> <h2>42€</h2>\n          </button>\n        </InfoWindow>\n        <Polyline\n          id=\"polyline\"\n          opts={{\n            path: [\n              { lat: 48.9333, lng: 2.3667 },\n              { lat: 48.9167, lng: 2.3833 },\n              { lat: 48.9, lng: 2.3333 },\n              { lat: 48.95, lng: 2.3167 }\n            ],\n            strokeColor: \"orange\"\n          }}\n        />\n        <OverlayView position={{ lat: 48.91, lng: 2.3667 }}>\n          <Taxi size={size.medium} color={color.purple} />\n          <h2>48€</h2> */}\n        </OverlayView>\n      </GoogleMapProvider>\n    </>\n  );\n};\nexport default ItineraryMap;\n"]},"metadata":{},"sourceType":"module"}