{"ast":null,"code":"import _slicedToArray from \"/Users/a.c./Documents/Git/Projet-3-SNCF/API-MaaS-app/ProjetB-SNCF-MAAS/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/a.c./Documents/Git/Projet-3-SNCF/API-MaaS-app/ProjetB-SNCF-MAAS/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/a.c./Documents/Git/Projet-3-SNCF/API-MaaS-app/ProjetB-SNCF-MAAS/frontend/src/components/FormTravel/Departure.js\";\nimport React from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress // geocodeByPlaceId,\n, getLatLng } from \"react-places-autocomplete\";\n\nclass Departure extends React.Component {\n  constructor({\n    globalState,\n    setGlobalState\n  }) {\n    super({\n      globalState,\n      setGlobalState\n    });\n\n    this.handleDeparture = address => {\n      this.setState({\n        departure: {\n          address: address\n        }\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => {\n        this.setState({\n          departure: {\n            address: address,\n            lat: latLng.lat,\n            lng: latLng.lng\n          }\n        });\n        console.log(\"Success departure address\", `latitude : ${this.state.departure.lat}`, `longitude : ${this.state.departure.lng}`, `address : ${this.state.departure.address}`);\n        console.log(\"globalState : \", this.state);\n      }) // .then(address => this.setState({ departure: address }))\n      .catch(error => console.error(\"Error\", error));\n    };\n\n    this.state = _objectSpread({}, globalState);\n\n    var _this$setState$bind = this.setState.bind(this);\n\n    var _this$setState$bind2 = _slicedToArray(_this$setState$bind, 1);\n\n    setGlobalState = _this$setState$bind2[0];\n    this.handleDeparture = this.handleDeparture.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(PlacesAutocomplete, {\n      value: this.state.departure.address,\n      onChange: this.handleDeparture,\n      onSelect: this.handleSelect,\n      shouldFetchSuggestions: this.state.departure.address.length > 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({\n      id: \"departure\",\n      placeholder: \"Adresse de d\\xE9part\",\n      style: {\n        lineHeight: \"1.2em\",\n        width: \"250px\",\n        borderTop: \"none\",\n        borderLeft: \"none\",\n        borderRight: \"none\",\n        borderBottom: \"1px solid #6767AD\",\n        fontSize: \"1.3em\",\n        outline: \"none\",\n        padding: \"20px\",\n        margin: \"10px\",\n        background: \"rgba(255, 255, 255, 0)\",\n        color: \"#241F5D\"\n      }\n    }, getInputProps({\n      // placeholder: \"Search Places ...\",\n      className: \"location-search-input\"\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const placeName = suggestion.active ? suggestion.description : \"\";\n      const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        lineHeight: \"1.2em\",\n        width: \"250px\",\n        color: \"#241F5D\",\n        backgroundColor: \"rgba(255, 255, 255, 50)\",\n        cursor: \"pointer\"\n      } : {\n        color: \"#241F5D\",\n        backgroundColor: \"rgba(255, 255, 255, 50)\",\n        cursor: \"pointer\"\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, suggestion.description));\n    })))));\n  }\n\n}\n\nexport default Departure;","map":{"version":3,"sources":["/Users/a.c./Documents/Git/Projet-3-SNCF/API-MaaS-app/ProjetB-SNCF-MAAS/frontend/src/components/FormTravel/Departure.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","Departure","Component","constructor","globalState","setGlobalState","handleDeparture","address","setState","departure","handleSelect","then","results","latLng","lat","lng","console","log","state","catch","error","bind","render","length","getInputProps","suggestions","getSuggestionItemProps","loading","lineHeight","width","borderTop","borderLeft","borderRight","borderBottom","fontSize","outline","padding","margin","background","color","className","map","suggestion","placeName","active","description","style","backgroundColor","cursor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  // geocodeByPlaceId,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nclass Departure extends React.Component {\n  constructor({ globalState, setGlobalState }) {\n    super({ globalState, setGlobalState });\n    this.state = { ...globalState };\n    [setGlobalState] = this.setState.bind(this);\n    this.handleDeparture = this.handleDeparture.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleDeparture = address => {\n    this.setState({ departure: { address: address } });\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        this.setState({\n          departure: { address: address, lat: latLng.lat, lng: latLng.lng }\n        });\n        console.log(\n          \"Success departure address\",\n          `latitude : ${this.state.departure.lat}`,\n          `longitude : ${this.state.departure.lng}`,\n          `address : ${this.state.departure.address}`\n        );\n        console.log(\"globalState : \", this.state);\n      })\n      // .then(address => this.setState({ departure: address }))\n      .catch(error => console.error(\"Error\", error));\n  };\n\n  render() {\n    return (\n      <>\n        <PlacesAutocomplete\n          value={this.state.departure.address}\n          onChange={this.handleDeparture}\n          onSelect={this.handleSelect}\n          shouldFetchSuggestions={this.state.departure.address.length > 3}\n        >\n          {({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          }) => (\n            <div>\n              <input\n                id=\"departure\"\n                placeholder=\"Adresse de départ\"\n                style={{\n                  lineHeight: \"1.2em\",\n                  width: \"250px\",\n                  borderTop: \"none\",\n                  borderLeft: \"none\",\n                  borderRight: \"none\",\n                  borderBottom: \"1px solid #6767AD\",\n                  fontSize: \"1.3em\",\n                  outline: \"none\",\n                  padding: \"20px\",\n                  margin: \"10px\",\n                  background: \"rgba(255, 255, 255, 0)\",\n                  color: \"#241F5D\"\n                }}\n                {...getInputProps({\n                  // placeholder: \"Search Places ...\",\n                  className: \"location-search-input\"\n                })}\n              />\n              <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => {\n                  const placeName = suggestion.active\n                    ? suggestion.description\n                    : \"\";\n                  const className = suggestion.active\n                    ? \"suggestion-item--active\"\n                    : \"suggestion-item\";\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? {\n                        lineHeight: \"1.2em\",\n                        width: \"250px\",\n                        color: \"#241F5D\",\n                        backgroundColor: \"rgba(255, 255, 255, 50)\",\n                        cursor: \"pointer\"\n                      }\n                    : {\n                        color: \"#241F5D\",\n                        backgroundColor: \"rgba(255, 255, 255, 50)\",\n                        cursor: \"pointer\"\n                      };\n\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, {\n                        className,\n                        style\n                      })}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n      </>\n    );\n  }\n}\n\nexport default Departure;\n"]},"metadata":{},"sourceType":"module"}